//using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Linq.Expressions;
//using System.Text;
//using System.Threading.Tasks;

//namespace Common.DataContracts
//{
//    public interface IRepositoryGeneric<TdtoTef,TIdType> where TdtoTef : IGenericEntities<TIdType>
//    {

//        void Create(TdtoTef entity);
//        void Delete(TdtoTef entity);
//        void Delete(TIdType id);
//        void Edit(TdtoTef entity);

//        //read side (could be in separate Readonly Generic Repository)
//        TdtoTef GetById(TIdType id);
//        IEnumerable<TdtoTef> Filter();
//        IEnumerable<TdtoTef> Filter(Func<TdtoTef, bool> predicate);

//        //separate method SaveChanges can be helpful when using this pattern with UnitOfWork
//        void SaveChanges();


//    }
//}
